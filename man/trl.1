.TH "TRL" "1" "September 2015" "v0.3.3" ""
.SH "NAME"
\fBtrl\fR \- transform lists of strings
.SH SYNOPSIS
.P
Transform lists of unquoted and/or quoted strings\.
.P
.RS 2
.nf
trl [<options>] [<text>\.\.\.]

\-s <inSep>      input list separator 
\-S <outSep>     output list separator
\-k              keep input item delimiters
\-D <outDelim>   output item delimiter (cannot be combined with \-k)
\-W <wrapText>   text to wrap the result list in
\-R <ors>        output record separator (multi\-line + multi\-item\-per\-line
                input only)
.fi
.RE
.P
By default,
.RS 0
.IP \(bu 2
a multi\-line list is transformed to a single\-line list with double\-quoted
.br
items separated by a comma followed by a space\.
.IP \(bu 2
a single\-line list is transformed to a multi\-line list with unquoted items\.

.RE
.P
Standard options: \fB\-\-help\fP, \fB\-\-man\fP, \fB\-\-version\fP, \fB\-\-home\fP
.SH DESCRIPTION
.P
trl \fItr\fRansforms \fIl\fRists of unquoted and/or quoted strings, by default between
.br
single\- and multi\-line forms\.
.br
Separators, delimiters, and an optional wrapper string are configurable\.
.P
Both single\- and double\-quotes are recognized as input item delimiters\.
.P
\fBCaveats\fR:
.RS 0
.IP \(bu 2
Unbalanced single\- or double\-quotes in the input break parsing and result
.br
in unpredictable output\.
.IP \(bu 2
While \\' and \\" are recognized as literal single\- and double\-quotes in
.br
the input, they are output as literals without escaping; the only
.br
exception is \\' inside a single\-quoted string in the input, which is output
.br
as \\' as well\.

.RE
.P
Input is provided via one or more operands or, in their absence, via stdin\.
.br
To disambiguate operands from options, precede operands with \fB\-\-\fP as a
.br
separate argument\.
.P
Sensible defaults are used for options that aren't explicitly specified;
.br
their values depend on whether the input is single\- or multi\-line:  
.RS 0
.IP \(bu 2
Single\-line input:
.br
List items are assumed to be separated with whitespace, a comma, or a comma
.br
followed by whitespace\.
.br
They are transformed into multi\-line output with each item on its own
.br
line, stripped of surrounding quotes\.
.IP \(bu 2
Multi\-line input:
.br
List items are assumed to be each on a separate line\.
.br
They are transformed into a single\-line list with items double\-quoted and
.br
separated by a comma followed by a space\.  

.RE
.P
Explicitly specified options override the behavior described\.
.SH OPTIONS
.P
Some options described below come in two flavors:
.RS 0
.IP \(bu 2
Lowercase options such as \fB\-s\fP describe the \fIinput\fR\|\.
.IP \(bu 2
[Corresponding] uppercase options such as \fB\-S\fP control the \fIoutput\fR\|\.

.RE
.P
With the exception of \fB\-s\fP, which accepts a Perl regular expression to
.br
describe the separators between input items, options with arguments expect
.br
literals rather than escape sequences; if needed, use ANSI C\-quoted strings
.br
in Bash, Ksh, or Zsh to create literal control characters; e\.g\., \fB$'\\n'\fP and
.br
\fB$'\\t'\fP create a literal newline and tab, respectively\.
.RS 0
.IP \(bu 2
\fB\-k\fP, \fB\-\-keep\fP
.br
Keeps all items in their input form, whether quoted or unquoted; the
.br
default is to remove quoting on input processing; double\-quoting is
.br
by default applied on \fIoutput\fR when transforming a multi\-line list to a
.br
single\-line list; to unconditionally produce unquoted items, use
.br
\fB\-D ''\fP, to enforce a uniform quoting character, use \fB\-D <delim>\fP\|\.  
.IP \(bu 2
\fB\-s <inSep>\fP, \fB\-\-separator <inSep>\fP
.br
Specifies the input item separator, i\.e\., what separates items in the
.br
input, using a Perl regular expression\. Note that \fIruns\fR of matches
.br
(i\.e\., one or more contiguous instances) are invariably considered a
.br
\fIsingle\fR separator\.
.IP \(bu 2
\fB\-S <outSep>\fP, \fB\-\-out\-separator <outSep>\fP
.br
Specifies the output item separator, i\.e\., how to separate the items
.br
on output, irrespective of what separated them in the input\.
.IP \(bu 2
\fB\-D <outDelim>\fP, \fB\-\-out\-delim <outDelim>\fP
.br
Specifies the delimiter to put around the output items; this may be
.br
any string, but note that on \fIinput\fR only single\- and double\-quotes
.br
are recognized; cannot be combined with \fB\-k\fP\|\.
.br
Use \fB\-D ''\fP to make all output items unquoted\.
.br
If a single char\. is specified, it is used as both the opening and
.br
closing delimiter; otherwise, the first \fIhalf\fR of the specified string
.br
is used as the opening delimiter, and the second half as the closing one\.
.IP \(bu 2
\fB\-W <wrapText>\fP, \fB\-\-out\-wrapper <wrapText>\fP
.br
Specifies output wrapper text to place around the entire output list,
.br
including  desired whitespace, if any: if a single char\. is specified,
.br
that char\. is used both before and the after the output list; otherwise,
.br
the first \fIhalf\fR of the text is placed before, and the second one after;
.br
if the output list is multi\-line, a newline is appended / prepended to
.br
the opening/closing string\.
.IP \(bu 2
\fB\-R <ors>\fP, \fB\-\-out\-rec\-separator <ors>\fP
.br
Specifies the output record separator, which only applies to multi\-line
.br
input whose lines contain multiple items each: by default, the output
.br
record separator is set to the same value as the input item separator,
.br
so that a multi\-line list results in a uniformly separated single\-line
.br
list\. Specify \fB\-R $'\\n'\fP to instead retain the line breaks from the
.br
input (while transforming the items on each line), or pass an
.br
alternative separator to replace them\.

.RE
.SH STANDARD OPTIONS
.P
All standard options provide information only\.
.RS 0
.IP \(bu 2
\fB\-h, \-\-help\fP
.br
Prints the contents of the synopsis chapter to stdout for quick reference\.
.IP \(bu 2
\fB\-\-man\fP
.br
Displays this manual page, which is a helpful alternative to using \fBman\fP,
.br
if the manual page isn't installed\.
.IP \(bu 2
\fB\-\-version\fP
.br
Prints version information\.
.IP \(bu 2
\fB\-\-home\fP
.br
Opens this utility's home page in the system's default web browser\.

.RE
.SH PREREQUISITES
.P
Perl 5 must be installed\.
.SH LICENSE
.P
For license information, bug reports, and more, visit this utility's home page
.br
by running \fBtrl \-\-home\fP
.SH EXAMPLES
.P
The examples in part use ANSI C\-quoted input strings (\fB$'\.\.\.'\fP) for brevity,
.br
which are supported in Bash, Ksh, and Zsh\.  
.P
.RS 2
.nf
# Default single\-line to multi\-line transformation\.
$ trl '"one", "two", "three"'
one
two
three

# Default multi\-line to single\-line transformation\.
$ trl <<<$'one\\ntwo\\nthree'
"one", "two", "three"

# Transform the argument list to a C\-style array:
$ trl \-S ', ' \-D \\" \-W '{  }' one two three 'four (4)'
{ "one", "two", "three", "four (4)" }

# Transform a list to multi\-line form using a regex to identify items;
# US\-format telephone number to CSV:
$ trl \-s '[() \-]' \-S , '(789) 123\-456'
789,123,456

# Transform a multi\-line list with multiple items per line\.
$ trl \-s ' ' \-R ' <\-> '  <<<$'one two\\nthree four'
"one", "two" <\-> "three", "four"
.fi
.RE

