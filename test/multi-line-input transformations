#!/usr/bin/env bash

# ---
# IMPORTANT: Use the following statement at the TOP OF EVERY TEST SCRIPT
#            to ensure that this package's 'bin/' subfolder is added to the path so that
#            this package's CLIs can be invoked by their mere filename in the rest
#            of the script.
# ---
PATH=${PWD%%/test*}/bin:$PATH

# Helper function for error reporting.
die() { (( $# > 0 )) && echo "$*" >&2; exit 1; }


  # Create test files.
tmpFiles=( /tmp/trl-test-$$-{0..4} )
pv tmpFiles
i=0
for tmpFile in "${tmpFiles[@]}"; do  
  case $(( i++ )) in
    0)
      cat <<EOF > "$tmpFile"
one
two
three
EOF
      ;;
    1)
      cat <<EOF > "$tmpFile"
one
two (2)
three
EOF
      ;;
    2)
      cat <<EOF > "$tmpFile"
one
'two (2)'
"three"
EOF
      ;;
    3)
      cat <<EOF > "$tmpFile"
one  'two (2)'
"three"  four
EOF
      ;;
    4)
      cat <<EOF > "$tmpFile"
one
t\"wo
th\'ree
"fi\"ve"
'fou\'r'
EOF
      ;;
    *)
      die "DESIGN ERROR: missing content for temp. file '$tmpFile'."
      ;;
  esac
  (( $? == 0 )) || die "Failed to create temp. file: '$tmpFile'"
done

# --

diff <(trl < "${tmpFiles[0]}") - <<'EOF' || die "default, unquoted, no embedded whitespace: unexpected output"
"one", "two", "three"
EOF

diff <(trl < "${tmpFiles[1]}") - <<'EOF' || die "default, unquoted, embedded whitespace: unexpected output"
"one", "two (2)", "three"
EOF

diff <(trl < "${tmpFiles[2]}") - <<'EOF' || die "default, quoted, embedded whitespace: unexpected output"
"one", "two (2)", "three"
EOF

# --

diff <(trl -s ' ' < "${tmpFiles[3]}") - <<'EOF' || die "multiple items per line, default output: unexpected output"
"one", "two (2)", "three", "four"
EOF

diff <(trl -s ' ' -S @ -D '' < "${tmpFiles[3]}") - <<'EOF' || die "multiple items per line, reformatted with barewords and custom sep: unexpected output"
one@two (2)@three@four
EOF

diff <(trl -s ' ' -S @ -k < "${tmpFiles[3]}") - <<'EOF' || die "multiple items per line, reformatted with quoting retained: unexpected output"
one@'two (2)'@"three"@four
EOF

# --

diff <(trl -S ' ' -D \' -W '(  )' < "${tmpFiles[2]}") - <<'EOF' || die "to single-quoted shell array: unexpected output"
( 'one' 'two (2)' 'three' )
EOF

diff <(trl -s ' ' -S ', ' -D \' -W '[]' < "${tmpFiles[3]}") - <<'EOF' || die "to Python array: unexpected output"
['one', 'two (2)', 'three', 'four']
EOF

# --

# Note how \' inside a '-quoted string is retained WITH the \.
diff <(trl -S @ -D '' < "${tmpFiles[4]}") - <<'EOF' || die "escaped quotes: unexpected output"
one@t"wo@th'ree@fi"ve@fou\'r
EOF

rm -f "${tmpFiles[@]}"
